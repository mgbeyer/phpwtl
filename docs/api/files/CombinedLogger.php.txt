<?php
namespace phpWTL;
use phpWTL\CommonLogger;
use phpWTL\CombinedFormatDescriptor;
use phpWTL\LoggerContent;
use phpWTL\CombinedDataRetriever;
use phpWTL\GenericDataValidator;
use phpWTL\CombinedDataFormatter;

require_once 'CommonLogger.php';
require_once 'CombinedFormatDescriptor.php';
require_once 'LoggerContent.php';
require_once 'CombinedDataRetriever.php';
require_once 'GenericDataValidator.php';
require_once 'CombinedDataFormatter.php';

/**
  * Logger for the combined log format, which is NCSA common plus two additional fields (see: https://httpd.apache.org/docs/1.3/logs.html#combined). 
  *
  * @author Michael Beyer <mgbeyer@gmx.de>
  * @version v0.1.0
  * @api
  */
class CombinedLogger extends CommonLogger {

	/**
	  * @author Michael Beyer <mgbeyer@gmx.de>
	  * @version v0.1.1
	  */
	protected function __construct($retrievalPolicies= null) {		
		static::setDataRetrievalPolicies($retrievalPolicies);
		static::$loggerContent= new LoggerContent(CombinedFormatDescriptor::getInstance());
		static::$dataRetriever= CombinedDataRetriever::getInstance(array(static::$loggerContent, static::$retrievalPolicies));
		static::$dataValidator= GenericDataValidator::getInstance(static::$loggerContent);
		static::$dataFormatter= CombinedDataFormatter::getInstance(static::$loggerContent);
		if (DataRetrievalPolicyHelper::existsDataRetrievalPolicy(static::$retrievalPolicies, DRP::DRP_CONTENT_LENGTH_RETRIEVAL) &&
			DataRetrievalPolicyHelper::getDataRetrievalPolicyFlag(static::$retrievalPolicies, DRP::DRP_CONTENT_LENGTH_RETRIEVAL)==DRP::DRP_CLR_BUFFER) {
			static::initializeBuffering();
		}
	}
	
}
?>

